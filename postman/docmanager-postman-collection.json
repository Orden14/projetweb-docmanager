{
	"info": {
		"_postman_id": "5b9ce0d9-974c-489f-9033-0a10c7825aa8",
		"name": "DocManager GraphQL Integration Tests - v6",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20235017"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Admin user created\", function () {",
							"    pm.expect(jsonData.data.createUser.email).to.eql(\"test@example.com\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"mutation { createUser(createUserDto: { email: \\\"test@example.com\\\", password: \\\"test123\\\", name: \\\"Test Admin\\\", role: ADMIN }) { id email } }\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/graphql",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.data.signIn);",
							"pm.test(\"Signed in successfully\", function () {",
							"    pm.expect(jsonData.data.signIn).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"mutation { signIn(email: \\\"test@example.com\\\", password: \\\"test123\\\") }\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/graphql",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Health",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"query\": \"query { checkHealth }\" }"
				},
				"url": {
					"raw": "{{base_url}}/graphql",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Document",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"document_id\", jsonData.data.createDocument.id);",
							"pm.test(\"Document created\", function () {",
							"    pm.expect(jsonData.data.createDocument.title).to.eql(\"Test Document\");",
							"    pm.expect(jsonData.data.createDocument.description).to.eql(\"Test description\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"mutation { createDocument(createDocumentDto: { title: \\\"Test Document\\\", description: \\\"Test description\\\", fileUrl: \\\"https://example.com/test.pdf\\\" }) { id title description fileUrl } }\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/graphql",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Document By ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query { getDocumentById(id: \\\"{{document_id}}\\\") { id title description fileUrl } }\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/graphql",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}